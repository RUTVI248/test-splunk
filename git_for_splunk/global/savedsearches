[
{
"action.email": "1",
"action.email.include.view_link": "0",
"action.email.message.alert": "$result.body$",
"action.email.subject.alert": "$result.subject$",
"action.email.useNSSubject": "1",
"action.populate_lookup": "0",
"action.rss": "0",
"action.script": "0",
"action.summary_index": "0",
"action.summary_index.force_realtime_schedule": "0",
"actions": "email",
"alert.digest_mode": "0",
"alert.expires": "24h",
"alert.severity": "3",
"alert.suppress": "0",
"alert.track": "0",
"alert_comparator": "greater than",
"alert_threshold": "0",
"alert_type": "number of events",
"allow_skew": "0",
"auto_summarize": "0",
"auto_summarize.command": "| summarize override=partial timespan=$auto_summarize.timespan$ max_summary_size=$auto_summarize.max_summary_size$ max_summary_ratio=$auto_summarize.max_summary_ratio$ max_disabled_buckets=$auto_summarize.max_disabled_buckets$ max_time=$auto_summarize.max_time$ [ $search$ ]",
"auto_summarize.cron_schedule": "*/10 * * * *",
"auto_summarize.dispatch.time_format": "%FT%T.%Q%:z",
"auto_summarize.dispatch.ttl": "60",
"auto_summarize.max_concurrent": "1",
"auto_summarize.max_disabled_buckets": "2",
"auto_summarize.max_summary_ratio": "0.1",
"auto_summarize.max_summary_size": "52428800",
"auto_summarize.max_time": "3600",
"auto_summarize.suspend_period": "24h",
"cron_schedule": "7-59/15 * * * *",
"defer_scheduled_searchable_idxc": "0",
"disabled": "1",
"dispatch.allow_partial_results": "1",
"dispatch.auto_cancel": "0",
"dispatch.auto_pause": "0",
"dispatch.buckets": "0",
"dispatch.earliest_time": "-5m",
"dispatch.latest_time": "now",
"dispatch.lookups": "1",
"dispatch.max_count": "500000",
"dispatch.max_time": "0",
"dispatch.rate_limit_retry": "0",
"dispatch.reduce_freq": "10",
"dispatch.rt_backfill": "0",
"dispatch.sample_ratio": "1",
"dispatch.spawn_process": "1",
"dispatch.time_format": "%FT%T.%Q%:z",
"dispatch.ttl": "2p",
"dispatchAs": "owner",
"display.events.fields": "[\"host\",\"source\",\"sourcetype\"]",
"display.events.list.drilldown": "full",
"display.events.list.wrap": "1",
"display.events.maxLines": "5",
"display.events.raw.drilldown": "full",
"display.events.rowNumbers": "0",
"display.events.table.drilldown": "1",
"display.events.table.wrap": "1",
"display.events.type": "list",
"display.general.enablePreview": "1",
"display.general.migratedFromViewState": "0",
"display.general.timeRangePicker.show": "1",
"display.general.type": "events",
"display.page.search.mode": "verbose",
"display.page.search.patterns.sensitivity": "0.8",
"display.page.search.showFields": "1",
"display.page.search.tab": "events",
"display.page.search.timeline.format": "compact",
"display.page.search.timeline.scale": "linear",
"display.statistics.drilldown": "cell",
"display.statistics.overlay": "none",
"display.statistics.percentagesRow": "0",
"display.statistics.rowNumbers": "0",
"display.statistics.show": "1",
"display.statistics.totalsRow": "0",
"display.statistics.wrap": "1",
"durable.backfill_type": "auto",
"durable.lag_time": "0",
"durable.max_backfill_intervals": "0",
"is_scheduled": "1",
"is_visible": "1",
"max_concurrent": "1",
"name": "GitForSplunk Run Health",
"owner": "nobody",
"precalculate_required_fields_for_alerts": "1",
"realtime_schedule": "1",
"request.ui_dispatch_app": "git_for_splunk",
"request.ui_dispatch_view": "search",
"restart_on_searchpeer_add": "1",
"run_n_times": "0",
"run_on_startup": "0",
"schedule_as": "auto",
"schedule_priority": "default",
"schedule_window": "0",
"search": "sourcetype=gitforsplunk index=_internal\n| regex _raw != \"(?s)COMMAND: git commit.*no changes added to commit\"\n| eval success_body = commit_hash + \"\n\n\" + commit_message + \"\n\n\" + mvjoin(changed_file, \"\n\") + \"\n\n\"\n| eval body = case(status=0, success_body, status=1, (\"Changes were committed to the repository but an unexpected error occured\n\n\" + _raw), true(), (\"Changes could not be commited.\n\n\" + _raw)) \n| eval status = case(status=0, \"OK\", status=1, \"Warning\", true(), \"Error\") \n| eval changes = if(isnull(changed_file), \"\", \"Changes: \" + tostring(mvcount(changed_file)) + \", \")\n| eval size = if(isnull(repo_size), \"\", \"RepoSize: \" + tostring(round(repo_size / 1000000)) + \"mb, \")\n| eval subject = \"GitForSplunk on \" + host + \": [\" + status + \"] \" + changes + size + \"Runtime: \" + tostring(round(runtime)) + \"sec, \" + strftime(_time, \"%Y-%m-%d %H:%M \") \n| fields body subject",
"sharing": "global",
"skip_scheduled_realtime_idxc": "0"
}
]
